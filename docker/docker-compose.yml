version: '3.2'

services:
  pg:
    image: postgres:12-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg-data:/var/lib/postgresql/data

  node-lab-backend:
    image: janobono/node-lab-backend:latest
    restart: unless-stopped
    environment:
      - APP_LOG_LEVEL=debug
      - APP_PORT=8080
      - APP_CONTEXT_PATH=/api/node-lab-backend
      - DB_HOST=pg
      - DB_PORT=5432
      - DB_NAME=app
      - DB_USER=app
      - DB_PASSWORD=app
      - TOKEN_ISSUER=node-lab
      - TOKEN_SECRET=559b5bf9a85957c48b447f666922588fe12d26452189d52dec924b68f7713fdb5a85c681145ddeb4291e37ccd6224e87643cedd118eb425d546c560f35ef1f11
      - TOKEN_EXPIRES_IN=1800s
    depends_on:
      - pg
    labels:
      - traefik.enable=true
      - traefik.http.routers.node-lab-backend.rule=PathPrefix(`/api/node-lab-backend`)
      - traefik.http.routers.node-lab-backend.entrypoints=web
      - traefik.http.services.node-lab-backend.loadbalancer.server.port=8080

#  node-lab-frontend:
#    image: janobono/node-lab-frontend:latest
#    restart: unless-stopped
#    labels:
#      - traefik.enable=true
#      - traefik.http.routers.node-lab-frontend.rule=PathPrefix(`/`)
#      - traefik.http.routers.node-lab-frontend.entrypoints=web
#      - traefik.http.services.node-lab-frontend.loadbalancer.server.port=80

  traefik:
    image: traefik:v2.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  pg-data:
